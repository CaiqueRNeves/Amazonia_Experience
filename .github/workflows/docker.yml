name: Docker CI/CD

on:
  push:
    branches: [ main, master, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build test image
      uses: docker/build-push-action@v3
      with:
        context: .
        load: true
        tags: amazonia-experience:test
        target: test
    
    - name: Run tests
      run: |
        docker run --rm amazonia-experience:test npm test

  build_and_push:
    name: Build and Push Docker image
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: yourusername/amazonia-experience
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=yourusername/amazonia-experience:buildcache
        cache-to: type=registry,ref=yourusername/amazonia-experience:buildcache,mode=max

  deploy:
    name: Deploy
    needs: build_and_push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
    - uses: actions/checkout@v3
    
    # Aqui vocÃª adicionaria seus passos de deploy
    # Exemplo para deploy com Docker em um servidor remoto:
    
    # - name: Set up SSH
    #   uses: webfactory/ssh-agent@v0.7.0
    #   with:
    #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    # - name: Deploy to server
    #   run: |
    #     # Add your server to known hosts
    #     mkdir -p ~/.ssh
    #     ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
    #     
    #     # Deploy using docker-compose
    #     scp docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/path/to/app/
    #     ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "cd /path/to/app && docker-compose pull && docker-compose up -d"
    
    - name: Placeholder for deploy
      run: echo "Add your deployment steps here"