name: Node.js CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint code
      run: npm run lint || true
    
    - name: Run unit tests
      run: npm test -- --testPathIgnorePatterns=tests/integration
    
    - name: Run integration tests
      run: npm test -- tests/integration
      env:
        NODE_ENV: test
        JWT_SECRET: test_secret
        JWT_REFRESH_SECRET: test_refresh_secret
        JWT_EXPIRES_IN: 1h
        JWT_REFRESH_EXPIRES_IN: 7d
        QUIZ_MAX_ATTEMPTS_PER_DAY: 5
        QUIZ_DEFAULT_TIMEOUT_MINUTES: 15

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build || echo "No build script defined"

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    # Aqui você adicionaria seus passos de deploy
    # Exemplos para diferentes serviços:
    
    # Para Heroku:
    # - name: Deploy to Heroku
    #   uses: akhileshns/heroku-deploy@v3.12.12
    #   with:
    #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
    #     heroku_app_name: "amazonia-experience"
    #     heroku_email: "your-email@example.com"
    
    # Para AWS Elastic Beanstalk:
    # - name: Deploy to AWS Elastic Beanstalk
    #   uses: einaregilsson/beanstalk-deploy@v20
    #   with:
    #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     application_name: "amazonia-experience"
    #     environment_name: "amazonia-experience-production"
    #     region: "sa-east-1"
    #     version_label: ${{ github.sha }}
    #     deployment_package: deploy.zip
    
    # Para Digital Ocean App Platform:
    # - name: Install doctl
    #   uses: digitalocean/action-doctl@v2
    #   with:
    #     token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    # - name: Deploy to Digital Ocean
    #   run: doctl apps create-deployment ${APP_ID}
    #   env:
    #     APP_ID: your-app-id
    
    - name: Placeholder for deploy
      run: echo "Add your deployment steps here"